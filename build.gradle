//file:noinspection GradlePackageVersionRange
plugins {
	id 'babric-loom' version '0.12-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.3'
	id 'maven-publish'
}

apply plugin: "checkstyle"

// Fetch build number from Github Actions
final def ENV = System.getenv()
version = "1.7.3+build." + (ENV.GITHUB_ACTIONS ? ENV.BUILD_NUMBER : "local")

archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
	gluedMinecraftJar()
	customMinecraftManifest.set("https://babric.github.io/manifest-polyfill/${minecraft_version}.json")
	accessWidenerPath = file("src/main/resources/apron.accesswidener")
}

repositories {
	mavenCentral()
	maven {
		name 'Babric'
		url 'https://maven.glass-launcher.net/babric'
		content {
			includeGroup 'babric'
			includeGroup 'org.lwjgl.lwjgl'
		}
	}
	maven {
		name 'halotroop'
		url 'https://repo.blucobalt.dev/repository/maven-halotroop'
		content {
			includeGroup 'com.halotroop'
			includeGroup 'io.github.betterthanupdates'
		}
	}
	maven {
		name 'Legacy Fabric'
		url "https://maven.legacyfabric.net/"
		content {
			includeGroup 'net.legacyfabric'
			includeGroup 'net.legacyfabric.legacy-fabric-api'
		}
	}

	maven {
		name 'Modrinth'
		url 'https://api.modrinth.com/maven'
		content {
			includeGroup 'maven.modrinth'
		}
	}
	maven {
		name 'JitPack'
		url 'https://jitpack.io'
		content {
			includeGroup 'com.github.*'
		}
	}

	flatDir {
		dirs "./remapped/client"
		dirs "./remapped/server"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "io.github.betterthanupdates:yarn:b1.7.3+build.${project.mappings}"
	modApi "babric:fabric-loader:${project.loader_version}"

	modImplementation("net.legacyfabric.legacy-fabric-api:legacy-fabric-logger-api-v1:${project.lfapi_version}")

	include modApi("maven.modrinth:mod-remapping-api:${project.mod_remapping_api_version}")
	include implementation('org.slick2d:slick2d-core:1.0.2')

	// Done
//	modRuntimeOnly(group: "remapped.client", name: "modloader", version: "b1.7.3")
//	modRuntimeOnly(group: "remapped.client", name: "modloadermp-1.7.3-unofficial", version: "v2")
//	modRuntimeOnly(group: "remapped.client", name: "minecraftforge-client", version: "1.0.7-20110907")
//	modRuntimeOnly(group: "remapped.client", name: "audiomod", version: "b1.7.3")
//	modRuntimeOnly(group: "remapped.client", name: "shockahpi", version: "r8")
	// Todo
//	modRuntimeOnly(group: "remapped.server", name: "modloadermp-1.7.3-unofficial-server", version: "v2")
//	modRuntimeOnly(group: "remapped.server", name: "minecraftforge-server", version: "1.0.7-20110907")
//	modRuntimeOnly(group: "remapped.client", name: "playerapi-1.7.3", version: "v1.7")
//	modRuntimeOnly(group: "remapped.client", name: "guiapi0.11.0", version: "1.7")
//	modRuntimeOnly(group: "remapped.client", name: "modoptionsapi", version: "v0.7")
//	modRuntimeOnly(group: "remapped.client", name: "guiapipatch", version: "v0.7")
}

checkstyle {
	configFile = rootProject.file("checkstyle.xml")
	toolVersion = "9.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	withSourcesJar()
}

tasks.withType(JavaCompile) {
	options.release = 8
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
	from("FORGE_LICENSE")
	from("PAULSCODE_LICENSE")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		if (ENV.MAVEN_URL) {
			maven {
				name 'halotroop-blucobalt.dev'
				url 'https://repo.blucobalt.dev/repository/maven-halotroop'
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		} else {
			mavenLocal()
		}
	}
}
